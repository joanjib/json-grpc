syntax = "proto3";

package arexservices;

option go_package = ".;arexservices";

message Empty {

}

message Id {
	uint64 				id					= 1;
}

message IsInvestor {
	bool 				is_investor			= 1;
}
message Client {
	uint64 				id					= 1;
	string 				fiscal_identity 	= 2;
	string 				name				= 3;
	string 				surname				= 4;
	string 				balance				= 5; 	// string representation of a numeric value in postgresql
	bool				is_investor			= 6;
}
	
message Invoice {
	uint64 				id					= 1;
	uint64				client_id			= 2;
	string				amount				= 3; 	// string representation of a numeric value in postgresql
	string 				creation_time		= 4;
	string        		state				= 5;
}

message SellOrder {
	uint64 				id					= 1;
	uint64 				invoice_id			= 2;
	string				size				= 3;
	string				amount 				= 4; 	// string representation of a numeric value in postgresql
	string				finan_size			= 5;
	string				finan_amount 		= 6; 	// string representation of a numeric value in postgresql
	string 				creation_time		= 7;
	string		 		state				= 8;
}

message Ledger	{
	uint64 				id					= 1;
	uint64				investor_id			= 2;
	uint64				sell_order_id		= 3;
	string				size				= 4; 	// string representation of a numeric value in postgresql
	string				amount 				= 5; 	// string representation of a numeric value in postgresql
	string				balance 			= 6; 	// string representation of a numeric value in postgresql
	string				discount			= 7; 	// string representation of a percentage (ex "44.55")
	string 				created_at			= 8;
	string				expected_profit		= 9;
	bool				is_adjusted			= 10;	// true: means: it's not the original big, it was adjusted. False otherwise
}

message InvoiceFinancing {
	SellOrder 			sell_order			= 1;
	Invoice 			invoice				= 2;
}

service ArexServices {
	
	// Issuer API
	rpc AddClient		(Client) 		returns (Id)	 			{}
	rpc RemoveClient	(Id)			returns (Empty)				{}
	rpc ListClients		(IsInvestor)	returns (stream Client) 	{}

	// SellOrder API & Invoices
	// Starts an invoice financing process with a SellOrder + Invoice. Returns the id of the SellOrder.
	rpc StartInvoiceFinancing (InvoiceFinancing) 	returns (Id)	{}
	// allows listing of the SellOrders to Investors.
	rpc ListSellOrders	(Empty)			returns (stream SellOrder) 	{}
	rpc ListInvoices	(Empty)			returns (stream Invoice) 	{}

	// Bidding API: process done into the Ledger.
	// Add a Bid in the Ledger and returns the Id of the Ledger entry 
	rpc AddBid			(Ledger)		returns (Id)				{}
	rpc RemoveBid		(Id)			returns (Empty)				{}
	// list all bids in all states
	rpc ListBids		(Empty)			returns (stream Ledger)		{}

}
