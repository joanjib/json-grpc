// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.5
// source: arexservices.proto

package arexservices

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Money struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Numeral int32 `protobuf:"varint,1,opt,name=numeral,proto3" json:"numeral,omitempty"`
	Decimal int32 `protobuf:"varint,2,opt,name=decimal,proto3" json:"decimal,omitempty"`
}

func (x *Money) Reset() {
	*x = Money{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arexservices_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Money) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Money) ProtoMessage() {}

func (x *Money) ProtoReflect() protoreflect.Message {
	mi := &file_arexservices_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Money.ProtoReflect.Descriptor instead.
func (*Money) Descriptor() ([]byte, []int) {
	return file_arexservices_proto_rawDescGZIP(), []int{0}
}

func (x *Money) GetNumeral() int32 {
	if x != nil {
		return x.Numeral
	}
	return 0
}

func (x *Money) GetDecimal() int32 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arexservices_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_arexservices_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_arexservices_proto_rawDescGZIP(), []int{1}
}

type Id struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Id) Reset() {
	*x = Id{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arexservices_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_arexservices_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_arexservices_proto_rawDescGZIP(), []int{2}
}

func (x *Id) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Issuer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FiscalIdentity string `protobuf:"bytes,1,opt,name=fiscal_identity,json=fiscalIdentity,proto3" json:"fiscal_identity,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Surname        string `protobuf:"bytes,3,opt,name=surname,proto3" json:"surname,omitempty"`
	Balance        *Money `protobuf:"bytes,4,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *Issuer) Reset() {
	*x = Issuer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arexservices_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Issuer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issuer) ProtoMessage() {}

func (x *Issuer) ProtoReflect() protoreflect.Message {
	mi := &file_arexservices_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issuer.ProtoReflect.Descriptor instead.
func (*Issuer) Descriptor() ([]byte, []int) {
	return file_arexservices_proto_rawDescGZIP(), []int{3}
}

func (x *Issuer) GetFiscalIdentity() string {
	if x != nil {
		return x.FiscalIdentity
	}
	return ""
}

func (x *Issuer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Issuer) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *Issuer) GetBalance() *Money {
	if x != nil {
		return x.Balance
	}
	return nil
}

type Investor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FiscalIdentity string `protobuf:"bytes,1,opt,name=fiscal_identity,json=fiscalIdentity,proto3" json:"fiscal_identity,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Surname        string `protobuf:"bytes,3,opt,name=surname,proto3" json:"surname,omitempty"`
	Balance        *Money `protobuf:"bytes,4,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *Investor) Reset() {
	*x = Investor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arexservices_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Investor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Investor) ProtoMessage() {}

func (x *Investor) ProtoReflect() protoreflect.Message {
	mi := &file_arexservices_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Investor.ProtoReflect.Descriptor instead.
func (*Investor) Descriptor() ([]byte, []int) {
	return file_arexservices_proto_rawDescGZIP(), []int{4}
}

func (x *Investor) GetFiscalIdentity() string {
	if x != nil {
		return x.FiscalIdentity
	}
	return ""
}

func (x *Investor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Investor) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *Investor) GetBalance() *Money {
	if x != nil {
		return x.Balance
	}
	return nil
}

type Invoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FiscalIdentity string `protobuf:"bytes,1,opt,name=fiscal_identity,json=fiscalIdentity,proto3" json:"fiscal_identity,omitempty"`
	IssuerId       int32  `protobuf:"varint,2,opt,name=issuer_id,json=issuerId,proto3" json:"issuer_id,omitempty"`
	Amount         *Money `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	CreationTime   string `protobuf:"bytes,4,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	State          string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Invoice) Reset() {
	*x = Invoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arexservices_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice) ProtoMessage() {}

func (x *Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_arexservices_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoice.ProtoReflect.Descriptor instead.
func (*Invoice) Descriptor() ([]byte, []int) {
	return file_arexservices_proto_rawDescGZIP(), []int{5}
}

func (x *Invoice) GetFiscalIdentity() string {
	if x != nil {
		return x.FiscalIdentity
	}
	return ""
}

func (x *Invoice) GetIssuerId() int32 {
	if x != nil {
		return x.IssuerId
	}
	return 0
}

func (x *Invoice) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Invoice) GetCreationTime() string {
	if x != nil {
		return x.CreationTime
	}
	return ""
}

func (x *Invoice) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type SellOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceId    int32  `protobuf:"varint,1,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id,omitempty"`
	Size         *Money `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Amount       *Money `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	CreationTime string `protobuf:"bytes,4,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	State        string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *SellOrder) Reset() {
	*x = SellOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arexservices_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SellOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellOrder) ProtoMessage() {}

func (x *SellOrder) ProtoReflect() protoreflect.Message {
	mi := &file_arexservices_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellOrder.ProtoReflect.Descriptor instead.
func (*SellOrder) Descriptor() ([]byte, []int) {
	return file_arexservices_proto_rawDescGZIP(), []int{6}
}

func (x *SellOrder) GetInvoiceId() int32 {
	if x != nil {
		return x.InvoiceId
	}
	return 0
}

func (x *SellOrder) GetSize() *Money {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *SellOrder) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *SellOrder) GetCreationTime() string {
	if x != nil {
		return x.CreationTime
	}
	return ""
}

func (x *SellOrder) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type Ledger struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvestorId     int32  `protobuf:"varint,1,opt,name=investor_id,json=investorId,proto3" json:"investor_id,omitempty"`
	SellOrderId    int32  `protobuf:"varint,2,opt,name=sell_order_id,json=sellOrderId,proto3" json:"sell_order_id,omitempty"`
	Size           *Money `protobuf:"bytes,3,opt,name=size,proto3" json:"size,omitempty"`
	Amount         *Money `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Balance        *Money `protobuf:"bytes,5,opt,name=balance,proto3" json:"balance,omitempty"`
	Discount       int32  `protobuf:"varint,6,opt,name=discount,proto3" json:"discount,omitempty"` // discount * 100
	CreationTime   string `protobuf:"bytes,7,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	ExpectedProfit *Money `protobuf:"bytes,8,opt,name=expected_profit,json=expectedProfit,proto3" json:"expected_profit,omitempty"`
}

func (x *Ledger) Reset() {
	*x = Ledger{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arexservices_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ledger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ledger) ProtoMessage() {}

func (x *Ledger) ProtoReflect() protoreflect.Message {
	mi := &file_arexservices_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ledger.ProtoReflect.Descriptor instead.
func (*Ledger) Descriptor() ([]byte, []int) {
	return file_arexservices_proto_rawDescGZIP(), []int{7}
}

func (x *Ledger) GetInvestorId() int32 {
	if x != nil {
		return x.InvestorId
	}
	return 0
}

func (x *Ledger) GetSellOrderId() int32 {
	if x != nil {
		return x.SellOrderId
	}
	return 0
}

func (x *Ledger) GetSize() *Money {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *Ledger) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Ledger) GetBalance() *Money {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *Ledger) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *Ledger) GetCreationTime() string {
	if x != nil {
		return x.CreationTime
	}
	return ""
}

func (x *Ledger) GetExpectedProfit() *Money {
	if x != nil {
		return x.ExpectedProfit
	}
	return nil
}

type InvoiceFinancing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SellOrder *SellOrder `protobuf:"bytes,1,opt,name=sell_order,json=sellOrder,proto3" json:"sell_order,omitempty"`
	Invoice   *Invoice   `protobuf:"bytes,2,opt,name=invoice,proto3" json:"invoice,omitempty"`
}

func (x *InvoiceFinancing) Reset() {
	*x = InvoiceFinancing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_arexservices_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceFinancing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceFinancing) ProtoMessage() {}

func (x *InvoiceFinancing) ProtoReflect() protoreflect.Message {
	mi := &file_arexservices_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceFinancing.ProtoReflect.Descriptor instead.
func (*InvoiceFinancing) Descriptor() ([]byte, []int) {
	return file_arexservices_proto_rawDescGZIP(), []int{8}
}

func (x *InvoiceFinancing) GetSellOrder() *SellOrder {
	if x != nil {
		return x.SellOrder
	}
	return nil
}

func (x *InvoiceFinancing) GetInvoice() *Invoice {
	if x != nil {
		return x.Invoice
	}
	return nil
}

var File_arexservices_proto protoreflect.FileDescriptor

var file_arexservices_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x22, 0x3b, 0x0a, 0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x75, 0x6d, 0x65, 0x72, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75,
	0x6d, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x22,
	0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x14, 0x0a, 0x02, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8e,
	0x01, 0x0a, 0x06, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x73,
	0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2d, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22,
	0x90, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f,
	0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xbb, 0x01, 0x0a,
	0x09, 0x53, 0x65, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xd1, 0x02, 0x0a, 0x06, 0x4c,
	0x65, 0x64, 0x67, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x65, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2d, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3c, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x0e,
	0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x22, 0x7b,
	0x0a, 0x10, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69,
	0x6e, 0x67, 0x12, 0x36, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x09, 0x73, 0x65, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x72,
	0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x32, 0xae, 0x06, 0x0a, 0x0c,
	0x41, 0x72, 0x65, 0x78, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x61, 0x72, 0x65, 0x78,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x1a,
	0x10, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49,
	0x64, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x73, 0x12, 0x13, 0x2e, 0x61, 0x72,
	0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x14, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0x00, 0x30, 0x01, 0x12, 0x39, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x2e, 0x61, 0x72, 0x65, 0x78,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x1a, 0x10, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x49, 0x64, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49,
	0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x4b, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x61, 0x72,
	0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x1a, 0x10, 0x2e, 0x61, 0x72,
	0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x64, 0x22, 0x00, 0x12,
	0x42, 0x0a, 0x17, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x2e, 0x61, 0x72, 0x65,
	0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x61,
	0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x61, 0x72, 0x65,
	0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3e, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x13, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x61,
	0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x32, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x42, 0x69,
	0x64, 0x12, 0x14, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x1a, 0x10, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x64, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x69, 0x64, 0x12, 0x10, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x64, 0x1a, 0x13, 0x2e, 0x61, 0x72, 0x65,
	0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x69, 0x64, 0x73, 0x12, 0x13, 0x2e,
	0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x14, 0x2e, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x22, 0x00, 0x30, 0x01, 0x42, 0x10, 0x5a, 0x0e,
	0x2e, 0x3b, 0x61, 0x72, 0x65, 0x78, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_arexservices_proto_rawDescOnce sync.Once
	file_arexservices_proto_rawDescData = file_arexservices_proto_rawDesc
)

func file_arexservices_proto_rawDescGZIP() []byte {
	file_arexservices_proto_rawDescOnce.Do(func() {
		file_arexservices_proto_rawDescData = protoimpl.X.CompressGZIP(file_arexservices_proto_rawDescData)
	})
	return file_arexservices_proto_rawDescData
}

var file_arexservices_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_arexservices_proto_goTypes = []interface{}{
	(*Money)(nil),            // 0: arexservices.Money
	(*Empty)(nil),            // 1: arexservices.Empty
	(*Id)(nil),               // 2: arexservices.Id
	(*Issuer)(nil),           // 3: arexservices.Issuer
	(*Investor)(nil),         // 4: arexservices.Investor
	(*Invoice)(nil),          // 5: arexservices.Invoice
	(*SellOrder)(nil),        // 6: arexservices.SellOrder
	(*Ledger)(nil),           // 7: arexservices.Ledger
	(*InvoiceFinancing)(nil), // 8: arexservices.InvoiceFinancing
}
var file_arexservices_proto_depIdxs = []int32{
	0,  // 0: arexservices.Issuer.balance:type_name -> arexservices.Money
	0,  // 1: arexservices.Investor.balance:type_name -> arexservices.Money
	0,  // 2: arexservices.Invoice.amount:type_name -> arexservices.Money
	0,  // 3: arexservices.SellOrder.size:type_name -> arexservices.Money
	0,  // 4: arexservices.SellOrder.amount:type_name -> arexservices.Money
	0,  // 5: arexservices.Ledger.size:type_name -> arexservices.Money
	0,  // 6: arexservices.Ledger.amount:type_name -> arexservices.Money
	0,  // 7: arexservices.Ledger.balance:type_name -> arexservices.Money
	0,  // 8: arexservices.Ledger.expected_profit:type_name -> arexservices.Money
	6,  // 9: arexservices.InvoiceFinancing.sell_order:type_name -> arexservices.SellOrder
	5,  // 10: arexservices.InvoiceFinancing.invoice:type_name -> arexservices.Invoice
	3,  // 11: arexservices.ArexServices.AddIssuer:input_type -> arexservices.Issuer
	2,  // 12: arexservices.ArexServices.RemoveIssuer:input_type -> arexservices.Id
	1,  // 13: arexservices.ArexServices.ListIssuers:input_type -> arexservices.Empty
	4,  // 14: arexservices.ArexServices.AddInvestor:input_type -> arexservices.Investor
	2,  // 15: arexservices.ArexServices.RemoveInvestor:input_type -> arexservices.Id
	1,  // 16: arexservices.ArexServices.ListInvestors:input_type -> arexservices.Empty
	8,  // 17: arexservices.ArexServices.StartInvoiceFinancing:input_type -> arexservices.InvoiceFinancing
	2,  // 18: arexservices.ArexServices.ReverseInvoiceFinancing:input_type -> arexservices.Id
	1,  // 19: arexservices.ArexServices.ListSellOrders:input_type -> arexservices.Empty
	1,  // 20: arexservices.ArexServices.ListInvoices:input_type -> arexservices.Empty
	7,  // 21: arexservices.ArexServices.AddBid:input_type -> arexservices.Ledger
	2,  // 22: arexservices.ArexServices.RemoveBid:input_type -> arexservices.Id
	1,  // 23: arexservices.ArexServices.ListBids:input_type -> arexservices.Empty
	2,  // 24: arexservices.ArexServices.AddIssuer:output_type -> arexservices.Id
	1,  // 25: arexservices.ArexServices.RemoveIssuer:output_type -> arexservices.Empty
	3,  // 26: arexservices.ArexServices.ListIssuers:output_type -> arexservices.Issuer
	2,  // 27: arexservices.ArexServices.AddInvestor:output_type -> arexservices.Id
	1,  // 28: arexservices.ArexServices.RemoveInvestor:output_type -> arexservices.Empty
	4,  // 29: arexservices.ArexServices.ListInvestors:output_type -> arexservices.Investor
	2,  // 30: arexservices.ArexServices.StartInvoiceFinancing:output_type -> arexservices.Id
	1,  // 31: arexservices.ArexServices.ReverseInvoiceFinancing:output_type -> arexservices.Empty
	6,  // 32: arexservices.ArexServices.ListSellOrders:output_type -> arexservices.SellOrder
	5,  // 33: arexservices.ArexServices.ListInvoices:output_type -> arexservices.Invoice
	2,  // 34: arexservices.ArexServices.AddBid:output_type -> arexservices.Id
	1,  // 35: arexservices.ArexServices.RemoveBid:output_type -> arexservices.Empty
	7,  // 36: arexservices.ArexServices.ListBids:output_type -> arexservices.Ledger
	24, // [24:37] is the sub-list for method output_type
	11, // [11:24] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_arexservices_proto_init() }
func file_arexservices_proto_init() {
	if File_arexservices_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_arexservices_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Money); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arexservices_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arexservices_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Id); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arexservices_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Issuer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arexservices_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Investor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arexservices_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Invoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arexservices_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SellOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arexservices_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ledger); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_arexservices_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceFinancing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_arexservices_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_arexservices_proto_goTypes,
		DependencyIndexes: file_arexservices_proto_depIdxs,
		MessageInfos:      file_arexservices_proto_msgTypes,
	}.Build()
	File_arexservices_proto = out.File
	file_arexservices_proto_rawDesc = nil
	file_arexservices_proto_goTypes = nil
	file_arexservices_proto_depIdxs = nil
}
